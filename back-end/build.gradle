//from which repositories we download dependencies :
repositories {
    mavenCentral()
}

//TODO add description
buildscript {
    repositories {
        mavenCentral()
        //for docker:        
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.4.RELEASE")
        // tag::build[] for docker
        classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')
        // end::build[]
    }
}

//Plugins. It is set of tasks

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
// tag::plugin[] for docker
apply plugin: 'com.palantir.docker'
// end::plugin[]

//Java version compatibility to use when compiling Java source.
sourceCompatibility = 1.8
// Java version to generate classes for. Default value: sourceCompatibility
//targetCompatibility = 1.8
//TODO add description
compileJava.options.encoding = 'UTF-8'

springBoot {
    mainClassName = 'com.example.Application'
}
//It is for log4j2
configurations {
    all*.exclude module: 'spring-boot-starter-logging'
}
// This is used as the docker image prefix (org)
group = 'likhanov'
bootJar {
    baseName = 'spring-boot-learning'
    version = '0.1.0'
}
task unpack(type: Copy) {
    dependsOn bootJar
    from(zipTree(tasks.bootJar.outputs.files.singleFile))
    into("build/dependency")
}
docker {
    name "${project.group}/${bootJar.baseName}"
    copySpec.from(tasks.unpack.outputs).into("dependency")
    buildArgs(['DEPENDENCY': "dependency"])
}
//End for docker.
sourceSets {
    main {
        resources {
            srcDir './../front-end/'
        }
    }
}
// Variables:
def SPRING_BOOT_VERSION = '2.1.5.RELEASE'
def SPRING_VERSION = '5.1.7.RELEASE'
def FREE_MARKER_VERSION = '2.3.23'
def FREE_MARKER_STARTER_VERSION = '2.1.3.RELEASE'
def LOMBOK_VERSION = '1.18.8'
def JUNIT_VERSION = '5.0.0'
def MOCKITO_VERSION = '2.1.0'
def LOG4J2_VERSION = '2.1.2.RELEASE'
def OKHTTP3_VERSION = '3.14.2'
//What we use in our project:
dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: SPRING_BOOT_VERSION
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-freemarker', version: FREE_MARKER_STARTER_VERSION
    compile group: 'org.freemarker', name: 'freemarker', version: FREE_MARKER_VERSION
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2', version: LOG4J2_VERSION
//TODO is it needed?
    compile("org.springframework.boot:spring-boot-starter-cache")
    compile 'javax.cache:cache-api:1.1.0'
    compile 'org.ehcache:ehcache:3.6.2'
//    TODO providedCompile vs compile vs compileOnly 
    compileOnly group: 'org.projectlombok', name: 'lombok', version: LOMBOK_VERSION
//    TODO annotationProcessor
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: LOMBOK_VERSION

    compile group: 'com.squareup.okhttp3', name: 'okhttp', version: OKHTTP3_VERSION
//    testCompile for test module
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: JUNIT_VERSION
    testCompile group: 'org.mockito', name: 'mockito-core', version: MOCKITO_VERSION
    testCompile group: 'org.springframework', name: 'spring-test', version: SPRING_VERSION
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: SPRING_BOOT_VERSION
}


//bootRun {
//    systemProperty "spring.profiles.active", "simple-cache"
//}